{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/components/Products.js\";\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport Product from '../components/Product';\nimport { perPage } from '../config';\nexport const ALL_PRODUCTS_QUERY = gql`\n    query ALL_PRODUCTS_QUERY($skip: Int = 0, $first: Int) {\n        allProducts(skip: $skip, first: $first) {\n            id\n            name\n            price\n            description\n            photo {\n                id\n                image {\n                    publicUrlTransformed\n                }\n            }\n        }\n    }\n`;\nconst ProductListStyles = styled.div.withConfig({\n  displayName: \"Products__ProductListStyles\",\n  componentId: \"sc-1uv5x8m-0\"\n})([\"display:grid;grid-template-columns:1fr 1fr;grid-gap:60px;\"]);\nexport default function Products({\n  page\n}) {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(ALL_PRODUCTS_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage\n    }\n  }); // console.log(\"Loading Products Page\", {data}, {error}, {loading});\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Wait for it... wait for it...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ProductListStyles, {\n      children: data.allProducts.map(product => /*#__PURE__*/_jsxDEV(Product, {\n        product: product\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n;","map":{"version":3,"sources":["/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/components/Products.js"],"names":["useQuery","gql","styled","Product","perPage","ALL_PRODUCTS_QUERY","ProductListStyles","div","Products","page","data","error","loading","variables","skip","first","message","allProducts","map","product","id"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,OAAO,MAAMC,kBAAkB,GAAGJ,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfO;AAiBP,MAAMK,iBAAiB,GAAGJ,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,iEAAvB;AAMA,eAAe,SAASC,QAAT,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAA0B;AACrC,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA;AAAd,MAAyBZ,QAAQ,CAACK,kBAAD,EAAqB;AACxDQ,IAAAA,SAAS,EAAE;AACPC,MAAAA,IAAI,EAAEL,IAAI,GAAGL,OAAP,GAAiBA,OADhB;AAEPW,MAAAA,KAAK,EAAEX;AAFA;AAD6C,GAArB,CAAvC,CADqC,CAOrC;;AACA,MAAIQ,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAK,CAACK,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,sBACI;AAAA,2BACI,QAAC,iBAAD;AAAA,gBACKN,IAAI,CAACO,WAAL,CAAiBC,GAAjB,CAAsBC,OAAD,iBAClB,QAAC,OAAD;AAA0B,QAAA,OAAO,EAAEA;AAAnC,SAAcA,OAAO,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;AAAA","sourcesContent":["import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport Product from '../components/Product';\nimport { perPage } from '../config';\n\nexport const ALL_PRODUCTS_QUERY = gql`\n    query ALL_PRODUCTS_QUERY($skip: Int = 0, $first: Int) {\n        allProducts(skip: $skip, first: $first) {\n            id\n            name\n            price\n            description\n            photo {\n                id\n                image {\n                    publicUrlTransformed\n                }\n            }\n        }\n    }\n`;\n\nconst ProductListStyles = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 60px;\n`;\n\nexport default function Products({page}) {\n    const {data, error, loading} = useQuery(ALL_PRODUCTS_QUERY, {\n        variables: {\n            skip: page * perPage - perPage, \n            first: perPage\n        },\n    });\n    // console.log(\"Loading Products Page\", {data}, {error}, {loading});\n    if (loading) return <p>Wait for it... wait for it...</p>;\n    if (error) return <p>Error: {error.message}</p>;\n    return (\n        <div>\n            <ProductListStyles>\n                {data.allProducts.map((product) => (\n                    <Product key={product.id} product={product}/>\n                ))}\n            </ProductListStyles>\n        </div>\n    )\n}; "]},"metadata":{},"sourceType":"module"}