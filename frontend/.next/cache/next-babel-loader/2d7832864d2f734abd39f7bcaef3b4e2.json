{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/components/SingleProduct.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query SINGLE_ITEM_QUERY($id: ID!) {\\n        Product (where: {\\n            id: $id\\n        }) \\n        {\\n            name\\n            price\\n            description\\n            photo {\\n                id\\n                image {\\n                    publicUrlTransformed\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from \"graphql-tag\";\nimport { useQuery } from '@apollo/client';\nimport DisplayError from '../components/ErrorMessage';\nvar SINGLE_ITEM_QUERY = gql(_templateObject());\nexport default function SingleProduct(_ref) {\n  _s();\n\n  var id = _ref.id;\n\n  var _useQuery = useQuery(SINGLE_ITEM_QUERY, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Wait for it... Wait for it...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 24\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(DisplayError, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 22\n  }, this);\n  var Product = data.Product;\n  console.log({\n    data: data,\n    loading: loading,\n    error: error\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: data.Product.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 12\n  }, this);\n}\n\n_s(SingleProduct, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\n_c = SingleProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleProduct\");","map":{"version":3,"sources":["/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/components/SingleProduct.js"],"names":["gql","useQuery","DisplayError","SINGLE_ITEM_QUERY","SingleProduct","id","variables","data","loading","error","Product","console","log","name"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAEA,IAAMC,iBAAiB,GAAGH,GAAH,mBAAvB;AAmBA,eAAe,SAASI,aAAT,OAA+B;AAAA;;AAAA,MAANC,EAAM,QAANA,EAAM;;AAAA,kBACTJ,QAAQ,CAACE,iBAAD,EAAoB;AACzDG,IAAAA,SAAS,EAAE;AAAED,MAAAA,EAAE,EAAFA;AAAF;AAD8C,GAApB,CADC;AAAA,MAClCE,IADkC,aAClCA,IADkC;AAAA,MAC5BC,OAD4B,aAC5BA,OAD4B;AAAA,MACnBC,KADmB,aACnBA,KADmB;;AAI1C,MAAGD,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACZ,MAAGC,KAAH,EAAU,oBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AALgC,MAMlCC,OANkC,GAMtBH,IANsB,CAMlCG,OANkC;AAO1CC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEL,IAAAA,IAAI,EAAJA,IAAF;AAAQC,IAAAA,OAAO,EAAPA,OAAR;AAAiBC,IAAAA,KAAK,EAALA;AAAjB,GAAZ;AACA,sBAAO;AAAA,2BACH;AAAA,gBAAKF,IAAI,CAACG,OAAL,CAAaG;AAAlB;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH;;GAXuBT,a;UACaH,Q;;;KADbG,a","sourcesContent":["import gql from \"graphql-tag\";\nimport { useQuery } from '@apollo/client';\nimport DisplayError from '../components/ErrorMessage';\n\nconst SINGLE_ITEM_QUERY = gql`\n    query SINGLE_ITEM_QUERY($id: ID!) {\n        Product (where: {\n            id: $id\n        }) \n        {\n            name\n            price\n            description\n            photo {\n                id\n                image {\n                    publicUrlTransformed\n                }\n            }\n        }\n    }\n`;\n\nexport default function SingleProduct({ id }) {\n    const { data, loading, error } = useQuery(SINGLE_ITEM_QUERY, {\n        variables: { id }\n    });\n    if(loading) return <p>Wait for it... Wait for it...</p>;\n    if(error) return <DisplayError error={error}/>;\n    const { Product } = data\n    console.log({ data, loading, error });\n    return <div>\n        <h2>{data.Product.name}</h2>\n    </div>\n}"]},"metadata":{},"sourceType":"module"}