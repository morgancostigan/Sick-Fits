{"ast":null,"code":"import _slicedToArray from \"/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/components/SignIn.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation SIGN_IN_MUTATION(email: String!, password: String!) {\\n        ... on UserAuthenticationWithPasswordSuccess {\\n            item {\\n                id\\n                name\\n                email\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Form from './styles/Form';\nimport useForm from \"../lib/useForm\";\nimport { useMutation, useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nvar SIGN_IN_MUTATION = gql(_templateObject());\nexport default function SignIn() {\n  _s();\n\n  var _useForm = useForm({\n    email: '',\n    password: ''\n  }),\n      inputs = _useForm.inputs,\n      handleChange = _useForm.handleChange,\n      clearForm = _useForm.clearForm,\n      resetForm = _useForm.resetForm;\n\n  var _useMutation = useMutation(SIGN_IN_MUTATION, {\n    variables: inputs\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      sign = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error,\n      data = _useMutation2$.data;\n\n  function handleSubmit(e) {\n    e.preventDefault(); //stop form from submitting early\n    //send email and password to graphQL API\n  }\n\n  ;\n  return (\n    /*#__PURE__*/\n    //method POST to prevent password from showing in URL, history, and logs\n    _jsxDEV(Form, {\n      method: \"post\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Go Ahead And Sign On In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            placeholder: \"Please Enter Your Email\",\n            autoComplete: \"email\",\n            value: inputs.email,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            placeholder: \"..And Your Password\",\n            autoComplete: \"password\",\n            value: inputs.password,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(SignIn, \"kETFixnNdrR8vYBHOgLWUQr32r4=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c = SignIn;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/components/SignIn.js"],"names":["Form","useForm","useMutation","useQuery","gql","SIGN_IN_MUTATION","SignIn","email","password","inputs","handleChange","clearForm","resetForm","variables","sign","loading","error","data","handleSubmit","e","preventDefault"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,eAAjB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,gBAAtC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,IAAMC,gBAAgB,GAAGD,GAAH,mBAAtB;AAaA,eAAe,SAASE,MAAT,GAAkB;AAAA;;AAAA,iBAE0BL,OAAO,CAAC;AAC3DM,IAAAA,KAAK,EAAE,EADoD;AAE3DC,IAAAA,QAAQ,EAAE;AAFiD,GAAD,CAFjC;AAAA,MAErBC,MAFqB,YAErBA,MAFqB;AAAA,MAEbC,YAFa,YAEbA,YAFa;AAAA,MAECC,SAFD,YAECA,SAFD;AAAA,MAEYC,SAFZ,YAEYA,SAFZ;;AAAA,qBAMYV,WAAW,CAACG,gBAAD,EAAmB;AACnEQ,IAAAA,SAAS,EAAEJ;AADwD,GAAnB,CANvB;AAAA;AAAA,MAMtBK,IANsB;AAAA;AAAA,MAMdC,OANc,kBAMdA,OANc;AAAA,MAMLC,KANK,kBAMLA,KANK;AAAA,MAMEC,IANF,kBAMEA,IANF;;AAU7B,WAASC,YAAT,CAAsBC,CAAtB,EAAwB;AACpBA,IAAAA,CAAC,CAACC,cAAF,GADoB,CACA;AACpB;AAEH;;AAAA;AAED;AAAA;AACI;AACA,YAAC,IAAD;AAAM,MAAA,MAAM,EAAC,MAAb;AAAoB,MAAA,QAAQ,EAAEF,YAA9B;AAAA,8BAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAII;AAAA,gCAEI;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA,2CAEI;AACI,YAAA,QAAQ,MADZ;AAEI,YAAA,IAAI,EAAC,OAFT;AAGI,YAAA,EAAE,EAAC,OAHP;AAII,YAAA,IAAI,EAAC,OAJT;AAKI,YAAA,WAAW,EAAC,yBALhB;AAMI,YAAA,YAAY,EAAC,OANjB;AAOI,YAAA,KAAK,EAAET,MAAM,CAACF,KAPlB;AAQI,YAAA,QAAQ,EAAEG;AARd;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAeI;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA,8CAEI;AACI,YAAA,IAAI,EAAC,UADT;AAEI,YAAA,EAAE,EAAC,UAFP;AAGI,YAAA,IAAI,EAAC,UAHT;AAII,YAAA,WAAW,EAAC,qBAJhB;AAKI,YAAA,YAAY,EAAC,UALjB;AAMI,YAAA,KAAK,EAAED,MAAM,CAACD,QANlB;AAOI,YAAA,QAAQ,EAAEE;AAPd;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfJ,eA2BI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AA+CH;;GA/DuBJ,M;UAEmCL,O,EAIdC,W;;;KANrBI,M;AA+DvB","sourcesContent":["import Form from './styles/Form';\nimport useForm from \"../lib/useForm\";\nimport { useMutation, useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\n\nconst SIGN_IN_MUTATION = gql`\n    mutation SIGN_IN_MUTATION(email: String!, password: String!) {\n        ... on UserAuthenticationWithPasswordSuccess {\n            item {\n                id\n                name\n                email\n            }\n        }\n    }\n`;\n\n\nexport default function SignIn() {\n\n    const { inputs, handleChange, clearForm, resetForm } = useForm({\n        email: '',\n        password: '',\n    });\n    const [sign, { loading, error, data }] = useMutation(SIGN_IN_MUTATION, {\n        variables: inputs,\n    });\n\n    function handleSubmit(e){\n        e.preventDefault(); //stop form from submitting early\n        //send email and password to graphQL API\n\n    };\n\n    return (\n        //method POST to prevent password from showing in URL, history, and logs\n        <Form method=\"post\" onSubmit={handleSubmit}>\n            {/* <DisplayError error={error} /> */}\n            <h2>Go Ahead And Sign On In</h2>\n            {/* <fieldset disabled={loading} aria-busy={loading}> */}\n            <fieldset>\n\n                <label htmlFor=\"email\">\n                    Email\n                    <input\n                        required\n                        type=\"email\"\n                        id=\"email\"\n                        name=\"email\"\n                        placeholder=\"Please Enter Your Email\"\n                        autoComplete=\"email\"\n                        value={inputs.email}\n                        onChange={handleChange}\n                    />\n                </label>\n                <label htmlFor=\"password\">\n                    Password\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        name=\"password\"\n                        placeholder=\"..And Your Password\"\n                        autoComplete=\"password\"\n                        value={inputs.password}\n                        onChange={handleChange}\n                    />\n                </label>\n                <button type=\"submit\">Sign In</button>\n            </fieldset>\n\n            {/* //EXAMPLE methods */}\n            {/* <button type='button' onClick={clearForm}>\n                Clear Form\n            </button>\n            <button type='button' onClick={resetForm}>\n                Reset Form\n            </button> */}\n\n        </Form>\n    )\n    \n};"]},"metadata":{},"sourceType":"module"}