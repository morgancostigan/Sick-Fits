{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/components/Reset.js\";\nimport Form from './styles/Form';\nimport useForm from \"../lib/useForm\";\nimport DisplayError from './ErrorMessage';\nimport { useMutation, useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport { CURRENT_USER_QUERY } from './User';\nconst RESET_MUTATION = gql`\n    mutation RESET_MUTATION(\n            $email: String!, \n            $token: String!, \n            $password: String!\n    ){\n        redeemUserPasswordResetToken(\n            email: $email,\n            password: $password,\n            token: $token\n        ){\n            code\n            message\n        }\n    }\n`;\nexport default function ResetPassword() {\n  const {\n    inputs,\n    handleChange,\n    clearForm,\n    resetForm\n  } = useForm({\n    email: '',\n    password: '',\n    token: ''\n  });\n  const [resetPassword, {\n    data,\n    loading\n  }] = useMutation(RESET_MUTATION, {\n    variables: inputs\n  });\n\n  async function handleSubmit(e) {\n    e.preventDefault(); //stop form from submitting early\n    //send email and password to graphQL API\n    // await signin();\n    //const res for logging only\n    //catch prevents popup dialog in favor of console\n\n    const res = await resetPassword().catch(console.error);\n    console.log({\n      res\n    });\n    console.log({\n      data,\n      error,\n      loading\n    }); // resetForm();\n  }\n\n  ;\n  return (\n    /*#__PURE__*/\n    //method POST to prevent password from showing in URL, history, and logs\n    _jsxDEV(Form, {\n      method: \"post\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Choose New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DisplayError, {\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        disabled: loading,\n        \"aria-busy\": loading,\n        children: [(data === null || data === void 0 ? void 0 : data.redeemUserPasswordResetToken) === null && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Password Successfully Reset, Please Sign In.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            placeholder: \"What Email Address Are You Using?\",\n            autoComplete: \"email\",\n            value: inputs.email,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: [\"New Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            placeholder: \"Please Enter a New Password\",\n            autoComplete: \"password\",\n            value: inputs.password,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)\n  );\n}\n;","map":{"version":3,"sources":["/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/components/Reset.js"],"names":["Form","useForm","DisplayError","useMutation","useQuery","gql","Router","CURRENT_USER_QUERY","RESET_MUTATION","ResetPassword","inputs","handleChange","clearForm","resetForm","email","password","token","resetPassword","data","loading","variables","handleSubmit","e","preventDefault","res","catch","console","error","log","redeemUserPasswordResetToken"],"mappings":"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","sourcesContent":["import Form from './styles/Form';\nimport useForm from \"../lib/useForm\";\nimport DisplayError from './ErrorMessage';\nimport { useMutation, useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport { CURRENT_USER_QUERY } from './User';\n\nconst RESET_MUTATION = gql`\n    mutation RESET_MUTATION(\n            $email: String!, \n            $token: String!, \n            $password: String!\n    ){\n        redeemUserPasswordResetToken(\n            email: $email,\n            password: $password,\n            token: $token\n        ){\n            code\n            message\n        }\n    }\n`;\n\nexport default function ResetPassword() {\n\n    const { inputs, handleChange, clearForm, resetForm } = useForm({\n        email: '',\n        password: '',\n        token: '',\n    });\n    const [resetPassword, { data, loading }] = useMutation(RESET_MUTATION, {\n        variables: inputs,\n    });\n\n    async function handleSubmit(e) {\n        e.preventDefault(); //stop form from submitting early\n        //send email and password to graphQL API\n        // await signin();\n        //const res for logging only\n        //catch prevents popup dialog in favor of console\n        const res = await resetPassword().catch(console.error);\n        console.log({ res });\n        console.log({ data, error, loading })\n\n        // resetForm();\n    };\n\n    return (\n        //method POST to prevent password from showing in URL, history, and logs\n        <Form method=\"post\" onSubmit={handleSubmit}>\n            {/* <DisplayError error={error} /> */}\n            <h2>Choose New Password</h2>\n            <DisplayError error={error} />\n\n            <fieldset disabled={loading} aria-busy={loading}>\n                {\n                    data?.redeemUserPasswordResetToken === null && (\n                        <p>Password Successfully Reset, Please Sign In.</p>\n                    )\n                }\n                {/* <fieldset> */}\n\n                <label htmlFor=\"email\">\n                    Email\n                    <input\n                        required\n                        type=\"email\"\n                        id=\"email\"\n                        name=\"email\"\n                        placeholder=\"What Email Address Are You Using?\"\n                        autoComplete=\"email\"\n                        value={inputs.email}\n                        onChange={handleChange}\n                    />\n                </label>\n                <label htmlFor=\"password\">\n                    New Password\n                    <input\n                        required\n                        type=\"password\"\n                        id=\"password\"\n                        name=\"password\"\n                        placeholder=\"Please Enter a New Password\"\n                        autoComplete=\"password\"\n                        value={inputs.password}\n                        onChange={handleChange}\n                    />\n                </label>\n                <button type=\"submit\">Submit</button>\n            </fieldset>\n\n            {/* //EXAMPLE methods */}\n            {/* <button type='button' onClick={clearForm}>\n                Clear Form\n            </button>\n            <button type='button' onClick={resetForm}>\n                Reset Form\n            </button> */}\n\n        </Form>\n    )\n\n};"]},"metadata":{},"sourceType":"module"}