{"ast":null,"code":"import _regeneratorRuntime from \"/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/components/RequestReset.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation REQUEST_RESET_MUTATION($email: String!, $password: String!, $name: String!) {\\n        createUser(data: {\\n            email: $email,\\n            name: $name,\\n            password: $password\\n        }){\\n            id\\n            name\\n            email\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Form from './styles/Form';\nimport useForm from \"../lib/useForm\";\nimport DisplayError from './ErrorMessage';\nimport { useMutation, useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport { CURRENT_USER_QUERY } from './User';\nvar REQUEST_RESET_MUTATION = gql(_templateObject());\nexport default function RequestReset() {\n  _s();\n\n  var _useForm = useForm({\n    email: ''\n  }),\n      inputs = _useForm.inputs,\n      handleChange = _useForm.handleChange,\n      clearForm = _useForm.clearForm,\n      resetForm = _useForm.resetForm;\n\n  var _useMutation = useMutation(REQUEST_RESET_MUTATION, {\n    variables: inputs // refetchQueries: [{ query: CURRENT_USER_QUERY }]\n\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      signup = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      data = _useMutation2$.data,\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error;\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault(); //stop form from submitting early\n              //send email and password to graphQL API\n              // await signin();\n              //const res for logging only\n              //catch prevents popup dialog in favor of console\n\n              _context.next = 3;\n              return signup()[\"catch\"](console.error);\n\n            case 3:\n              res = _context.sent;\n              console.log({\n                res: res\n              });\n              console.log({\n                data: data,\n                error: error,\n                loading: loading\n              });\n              resetForm();\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  ;\n  return (\n    /*#__PURE__*/\n    //method POST to prevent password from showing in URL, history, and logs\n    _jsxDEV(Form, {\n      method: \"post\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DisplayError, {\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        disabled: loading,\n        \"aria-busy\": loading,\n        children: [(data === null || data === void 0 ? void 0 : data.createUser) && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Reset link sent to \", data.createUser.email, \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            placeholder: \"What Email Address Are You Using?\",\n            autoComplete: \"email\",\n            value: inputs.email,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send Reset Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(RequestReset, \"mT/4FtybqU+XahNsFb3LQgCe1ZA=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c = RequestReset;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequestReset\");","map":{"version":3,"sources":["/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/components/RequestReset.js"],"names":["Form","useForm","DisplayError","useMutation","useQuery","gql","Router","CURRENT_USER_QUERY","REQUEST_RESET_MUTATION","RequestReset","email","inputs","handleChange","clearForm","resetForm","variables","signup","data","loading","error","handleSubmit","e","preventDefault","console","res","log","createUser"],"mappings":"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","sourcesContent":["import Form from './styles/Form';\nimport useForm from \"../lib/useForm\";\nimport DisplayError from './ErrorMessage';\nimport { useMutation, useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport { CURRENT_USER_QUERY } from './User';\n\nconst REQUEST_RESET_MUTATION = gql`\n    mutation REQUEST_RESET_MUTATION($email: String!, $password: String!, $name: String!) {\n        createUser(data: {\n            email: $email,\n            name: $name,\n            password: $password\n        }){\n            id\n            name\n            email\n        }\n    }\n`;\n\nexport default function RequestReset() {\n\n    const { inputs, handleChange, clearForm, resetForm } = useForm({\n        email: '',\n    });\n    const [signup, { data, loading, error }] = useMutation(REQUEST_RESET_MUTATION, {\n        variables: inputs,\n        // refetchQueries: [{ query: CURRENT_USER_QUERY }]\n    });\n\n    async function handleSubmit(e) {\n        e.preventDefault(); //stop form from submitting early\n        //send email and password to graphQL API\n        // await signin();\n        //const res for logging only\n        //catch prevents popup dialog in favor of console\n        const res = await signup().catch(console.error)\n        console.log({ res });\n        console.log({ data, error, loading });\n\n        resetForm();\n    };\n\n    return (\n        //method POST to prevent password from showing in URL, history, and logs\n        <Form method=\"post\" onSubmit={handleSubmit}>\n            {/* <DisplayError error={error} /> */}\n            <h2>Reset Password</h2>\n            <DisplayError error={error} />\n\n            <fieldset disabled={loading} aria-busy={loading}>\n                {\n                    data?.createUser && <div>\n                        <p>Reset link sent to {data.createUser.email}.</p>\n                    </div>\n                }\n                {/* <fieldset> */}\n                \n                <label htmlFor=\"email\">\n                    Email\n                    <input\n                        required\n                        type=\"email\"\n                        id=\"email\"\n                        name=\"email\"\n                        placeholder=\"What Email Address Are You Using?\"\n                        autoComplete=\"email\"\n                        value={inputs.email}\n                        onChange={handleChange}\n                    />\n                </label>\n                \n                <button type=\"submit\">Send Reset Link</button>\n            </fieldset>\n\n            {/* //EXAMPLE methods */}\n            {/* <button type='button' onClick={clearForm}>\n                Clear Form\n            </button>\n            <button type='button' onClick={resetForm}>\n                Reset Form\n            </button> */}\n\n        </Form>\n    )\n\n};"]},"metadata":{},"sourceType":"module"}