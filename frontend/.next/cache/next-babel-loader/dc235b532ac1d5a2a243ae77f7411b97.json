{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/components/SignIn.js\";\nimport Form from './styles/Form';\nimport useForm from \"../lib/useForm\";\nimport { useQuery } from '@apollo/client';\nexport default function SignIn() {\n  const {\n    inputs,\n    handleChange,\n    clearForm,\n    resetForm\n  } = useForm({\n    email: '',\n    password: ''\n  });\n  const [createProduct, {\n    loading,\n    error,\n    data\n  }] = useQuery(CREATE_PRODUCT_MUTATION, {\n    variables: inputs,\n    refetchQueries: [{\n      query: ALL_PRODUCTS_QUERY\n    }]\n  });\n  return (\n    /*#__PURE__*/\n    //method POST to prevent password from showing in URL, history, and logs\n    _jsxDEV(Form, {\n      method: \"post\",\n      onSubmit: async e => {\n        e.preventDefault(); // console.log({inputs});\n        //submit input fields to backend\n\n        const res = await createProduct();\n        clearForm(); //Go to the new product's page\n\n        Router.push({\n          pathname: `/product/${res.data.createProduct.id}`\n        });\n      },\n      children: [/*#__PURE__*/_jsxDEV(DisplayError, {\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        disabled: loading,\n        \"aria-busy\": loading,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            placeholder: \"Please Enter Your Email\",\n            value: inputs.email,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            placeholder: \"password\",\n            value: inputs.password,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)\n  );\n}\n;","map":{"version":3,"sources":["/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/components/SignIn.js"],"names":["Form","useForm","useQuery","SignIn","inputs","handleChange","clearForm","resetForm","email","password","createProduct","loading","error","data","CREATE_PRODUCT_MUTATION","variables","refetchQueries","query","ALL_PRODUCTS_QUERY","e","preventDefault","res","Router","push","pathname","id"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,eAAjB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAGA,eAAe,SAASC,MAAT,GAAkB;AAE7B,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,YAAV;AAAwBC,IAAAA,SAAxB;AAAmCC,IAAAA;AAAnC,MAAiDN,OAAO,CAAC;AAC3DO,IAAAA,KAAK,EAAE,EADoD;AAE3DC,IAAAA,QAAQ,EAAE;AAFiD,GAAD,CAA9D;AAIA,QAAM,CAACC,aAAD,EAAgB;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,GAAhB,IAA4CX,QAAQ,CAACY,uBAAD,EAA0B;AAChFC,IAAAA,SAAS,EAAEX,MADqE;AAEhFY,IAAAA,cAAc,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAEC;AAAT,KAAD;AAFgE,GAA1B,CAA1D;AAKA;AAAA;AACI;AACA,YAAC,IAAD;AAAM,MAAA,MAAM,EAAC,MAAb;AAAoB,MAAA,QAAQ,EAAE,MAAOC,CAAP,IAAa;AACvCA,QAAAA,CAAC,CAACC,cAAF,GADuC,CAEvC;AACA;;AACA,cAAMC,GAAG,GAAG,MAAMX,aAAa,EAA/B;AACAJ,QAAAA,SAAS,GAL8B,CAMvC;;AACAgB,QAAAA,MAAM,CAACC,IAAP,CAAY;AACRC,UAAAA,QAAQ,EAAG,YAAWH,GAAG,CAACR,IAAJ,CAASH,aAAT,CAAuBe,EAAG;AADxC,SAAZ;AAGH,OAVD;AAAA,8BAWI,QAAC,YAAD;AAAc,QAAA,KAAK,EAAEb;AAArB;AAAA;AAAA;AAAA;AAAA,cAXJ,eAYI;AAAU,QAAA,QAAQ,EAAED,OAApB;AAA6B,qBAAWA,OAAxC;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA,2CAEI;AACI,YAAA,QAAQ,MADZ;AAEI,YAAA,IAAI,EAAC,OAFT;AAGI,YAAA,EAAE,EAAC,OAHP;AAII,YAAA,IAAI,EAAC,OAJT;AAKI,YAAA,WAAW,EAAC,yBALhB;AAMI,YAAA,KAAK,EAAEP,MAAM,CAACI,KANlB;AAOI,YAAA,QAAQ,EAAEH;AAPd;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAaI;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA,8CAEI;AACI,YAAA,IAAI,EAAC,UADT;AAEI,YAAA,EAAE,EAAC,UAFP;AAGI,YAAA,IAAI,EAAC,UAHT;AAII,YAAA,WAAW,EAAC,UAJhB;AAKI,YAAA,KAAK,EAAED,MAAM,CAACK,QALlB;AAMI,YAAA,QAAQ,EAAEJ;AANd;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbJ,eAwBI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAoDH;AAAA","sourcesContent":["import Form from './styles/Form';\nimport useForm from \"../lib/useForm\";\nimport { useQuery } from '@apollo/client';\n\n\nexport default function SignIn() {\n\n    const { inputs, handleChange, clearForm, resetForm } = useForm({\n        email: '',\n        password: '',\n    });\n    const [createProduct, { loading, error, data }] = useQuery(CREATE_PRODUCT_MUTATION, {\n        variables: inputs,\n        refetchQueries: [{ query: ALL_PRODUCTS_QUERY }],\n    });\n\n    return (\n        //method POST to prevent password from showing in URL, history, and logs\n        <Form method=\"post\" onSubmit={async (e) => {\n            e.preventDefault();\n            // console.log({inputs});\n            //submit input fields to backend\n            const res = await createProduct();\n            clearForm();\n            //Go to the new product's page\n            Router.push({\n                pathname: `/product/${res.data.createProduct.id}`,\n            })\n        }}>\n            <DisplayError error={error} />\n            <fieldset disabled={loading} aria-busy={loading}>\n                <label htmlFor=\"email\">\n                    Email\n                    <input\n                        required\n                        type=\"email\"\n                        id=\"email\"\n                        name=\"email\"\n                        placeholder=\"Please Enter Your Email\"\n                        value={inputs.email}\n                        onChange={handleChange}\n                    />\n                </label>\n                <label htmlFor=\"password\">\n                    Password\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        name=\"password\"\n                        placeholder=\"password\"\n                        value={inputs.password}\n                        onChange={handleChange}\n                    />\n                </label>\n                <button type=\"submit\">Sign In</button>\n            </fieldset>\n\n            {/* //EXAMPLE methods */}\n            {/* <button type='button' onClick={clearForm}>\n                Clear Form\n            </button>\n            <button type='button' onClick={resetForm}>\n                Reset Form\n            </button> */}\n\n        </Form>\n    )\n    \n};"]},"metadata":{},"sourceType":"module"}