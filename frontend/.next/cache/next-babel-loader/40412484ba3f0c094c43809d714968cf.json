{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/components/CreateProduct.js\";\nimport { useMutation } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport useForm from \"../lib/useForm\";\nimport DisplayError from './ErrorMessage';\nimport { ALL_PRODUCTS_QUERY } from \"./Products\";\nimport Form from './styles/Form';\nimport Router from 'next/router';\nconst CREATE_PRODUCT_MUTATION = gql`\n    mutation CREATE_PRODUCT_MUTATION(\n        # which variables (and their types) are passed in?\n        $name: String!\n        $description: String!\n        $price: Int!\n        $image: Upload\n    ) {\n        createProduct (data:{\n            name: $name\n            price: $price\n            description: $description\n            # AVAILABLE MUST BE ALL CAPS TO WORK\n            status: \"AVAILABLE\"\n            photo: {\n                create: {\n                    image: $image\n                    altText: $name\n                }\n            }\n        }){\n            id\n            description\n            price\n            name\n        }\n    }\n`;\nexport default function CreateProduct() {\n  const {\n    inputs,\n    handleChange,\n    clearForm,\n    resetForm\n  } = useForm({\n    image: '',\n    name: '',\n    price: '',\n    description: ''\n  });\n  const [createProduct, {\n    loading,\n    error,\n    data\n  }] = useMutation(CREATE_PRODUCT_MUTATION, {\n    variables: inputs,\n    refetchQueries: [{\n      query: ALL_PRODUCTS_QUERY\n    }]\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: async e => {\n      e.preventDefault(); // console.log({inputs});\n      //submit input fields to backend\n\n      await createProduct();\n      clearForm(); //Go to the new product's page\n\n      Router.push({\n        pathname: ``\n      });\n    },\n    children: [/*#__PURE__*/_jsxDEV(DisplayError, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      disabled: loading,\n      \"aria-busy\": loading,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"image\",\n        children: [\"Image\", /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"file\",\n          id: \"image\",\n          name: \"image\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [\"Name It!\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          placeholder: \"Name\",\n          value: inputs.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"price\",\n        children: [\"Price It!\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"price\",\n          name: \"price\",\n          placeholder: \"Price\",\n          value: inputs.price,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: [\"Describe It!\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          name: \"description\",\n          placeholder: \"Description\",\n          value: inputs.description,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Bop It!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"+ Add Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n;","map":{"version":3,"sources":["/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/components/CreateProduct.js"],"names":["useMutation","gql","useForm","DisplayError","ALL_PRODUCTS_QUERY","Form","Router","CREATE_PRODUCT_MUTATION","CreateProduct","inputs","handleChange","clearForm","resetForm","image","name","price","description","createProduct","loading","error","data","variables","refetchQueries","query","e","preventDefault","push","pathname"],"mappings":"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","sourcesContent":["import { useMutation } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport useForm from \"../lib/useForm\";\nimport DisplayError from './ErrorMessage';\nimport { ALL_PRODUCTS_QUERY } from \"./Products\";\nimport Form from './styles/Form';\nimport Router from 'next/router';\n\nconst CREATE_PRODUCT_MUTATION = gql`\n    mutation CREATE_PRODUCT_MUTATION(\n        # which variables (and their types) are passed in?\n        $name: String!\n        $description: String!\n        $price: Int!\n        $image: Upload\n    ) {\n        createProduct (data:{\n            name: $name\n            price: $price\n            description: $description\n            # AVAILABLE MUST BE ALL CAPS TO WORK\n            status: \"AVAILABLE\"\n            photo: {\n                create: {\n                    image: $image\n                    altText: $name\n                }\n            }\n        }){\n            id\n            description\n            price\n            name\n        }\n    }\n`;\n\nexport default function CreateProduct() {\n    const {inputs, handleChange, clearForm, resetForm} = useForm({\n        image: '',\n        name: '',\n        price: '',\n        description: '',\n    });\n    const [createProduct, {loading, error, data}] = useMutation(CREATE_PRODUCT_MUTATION, {\n        variables: inputs,\n        refetchQueries: [{ query: ALL_PRODUCTS_QUERY }],\n    });\n    \n    return (\n        <Form onSubmit={ async (e) => {\n            e.preventDefault();\n            // console.log({inputs});\n            //submit input fields to backend\n            await createProduct();\n            clearForm();\n            //Go to the new product's page\n            Router.push({\n                pathname: ``\n            })\n        }}>\n            <DisplayError error={error}/>\n            <fieldset disabled={loading} aria-busy={loading}>\n                <label htmlFor=\"image\">\n                    Image\n                    <input\n                        required \n                        type=\"file\"\n                        id=\"image\"\n                        name=\"image\"\n                        onChange={handleChange}\n                    />\n                </label>\n                <label htmlFor=\"name\">\n                    Name It!\n                    <input\n                        type=\"text\"\n                        id=\"name\"\n                        name=\"name\"\n                        placeholder=\"Name\"\n                        value={inputs.name}\n                        onChange={handleChange}\n                    />\n                </label>\n                <label htmlFor=\"price\">\n                    Price It!\n                    <input\n                        type=\"number\"\n                        id=\"price\"\n                        name=\"price\"\n                        placeholder=\"Price\"\n                        value={inputs.price}\n                        onChange={handleChange}\n                    />\n                </label>\n                <label htmlFor=\"description\">\n                    Describe It!\n                    <textarea\n                        id=\"description\"\n                        name=\"description\"\n                        placeholder=\"Description\"\n                        value={inputs.description}\n                        onChange={handleChange}\n                    />\n                </label> \n                <label>\n                    Bop It!\n                </label>\n                <button type=\"submit\">+ Add Product</button>\n            </fieldset>\n\n            {/* //EXAMPLE methods */}\n            {/* <button type='button' onClick={clearForm}>\n                Clear Form\n            </button>\n            <button type='button' onClick={resetForm}>\n                Reset Form\n            </button> */}\n            \n        </Form>\n    )\n};\n"]},"metadata":{},"sourceType":"module"}