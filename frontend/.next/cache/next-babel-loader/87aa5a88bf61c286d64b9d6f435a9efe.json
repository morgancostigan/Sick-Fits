{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/components/CreateProduct.js\";\nimport gql from \"graphql-tag\";\nimport useForm from \"../lib/useForm\";\nimport Form from './styles/Form';\nconst CREATE_PRODUCT_MUTATION = gql`\n    mutation CREATE_PRODUCT_MUTATION(\n        # which variables (and their types) are passed in?\n        $name: String!\n        $description: String!\n        $price: Int!\n        $image: Upload\n    ) {\n        createProduct (data:{\n            name: $name\n            price: $price\n            description: $description\n            status: \"available\"\n            photo: {\n                create: {\n                    image: $image\n                    alttext: $name\n                }\n            }\n        }){\n            id\n            description\n            price\n            name\n        }\n    }\n`;\nexport default function CreateProduct() {\n  const {\n    inputs,\n    handleChange,\n    clearForm,\n    resetForm\n  } = useForm({\n    image: '',\n    name: '',\n    price: '',\n    description: ''\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: e => {\n      e.preventDefault();\n      console.log({\n        inputs\n      });\n    },\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"image\",\n        children: [\"Image\", /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"file\",\n          id: \"image\",\n          name: \"image\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [\"Name It!\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          placeholder: \"Name\",\n          value: inputs.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"price\",\n        children: [\"Price It!\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"price\",\n          name: \"price\",\n          placeholder: \"Price\",\n          value: inputs.price,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: [\"Describe It!\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          name: \"description\",\n          placeholder: \"Description\",\n          value: inputs.description,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Bop It!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"+ Add Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n;","map":{"version":3,"sources":["/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/components/CreateProduct.js"],"names":["gql","useForm","Form","CREATE_PRODUCT_MUTATION","CreateProduct","inputs","handleChange","clearForm","resetForm","image","name","price","description","e","preventDefault","console","log"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AAEA,MAAMC,uBAAuB,GAAGH,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA1BA;AA4BA,eAAe,SAASI,aAAT,GAAyB;AACpC,QAAM;AAACC,IAAAA,MAAD;AAASC,IAAAA,YAAT;AAAuBC,IAAAA,SAAvB;AAAkCC,IAAAA;AAAlC,MAA+CP,OAAO,CAAC;AACzDQ,IAAAA,KAAK,EAAE,EADkD;AAEzDC,IAAAA,IAAI,EAAE,EAFmD;AAGzDC,IAAAA,KAAK,EAAE,EAHkD;AAIzDC,IAAAA,WAAW,EAAE;AAJ4C,GAAD,CAA5D;AAMA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAGC,CAAD,IAAO;AACnBA,MAAAA,CAAC,CAACC,cAAF;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY;AAACX,QAAAA;AAAD,OAAZ;AAEH,KAJD;AAAA,2BAKI;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA,yCAEI;AACI,UAAA,QAAQ,MADZ;AAEI,UAAA,IAAI,EAAC,MAFT;AAGI,UAAA,EAAE,EAAC,OAHP;AAII,UAAA,IAAI,EAAC,OAJT;AAKI,UAAA,QAAQ,EAAEC;AALd;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA,4CAEI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,EAAE,EAAC,MAFP;AAGI,UAAA,IAAI,EAAC,MAHT;AAII,UAAA,WAAW,EAAC,MAJhB;AAKI,UAAA,KAAK,EAAED,MAAM,CAACK,IALlB;AAMI,UAAA,QAAQ,EAAEJ;AANd;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ,eAsBI;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA,6CAEI;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,EAAE,EAAC,OAFP;AAGI,UAAA,IAAI,EAAC,OAHT;AAII,UAAA,WAAW,EAAC,OAJhB;AAKI,UAAA,KAAK,EAAED,MAAM,CAACM,KALlB;AAMI,UAAA,QAAQ,EAAEL;AANd;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBJ,eAiCI;AAAO,QAAA,OAAO,EAAC,aAAf;AAAA,gDAEI;AACI,UAAA,EAAE,EAAC,aADP;AAEI,UAAA,IAAI,EAAC,aAFT;AAGI,UAAA,WAAW,EAAC,aAHhB;AAII,UAAA,KAAK,EAAED,MAAM,CAACO,WAJlB;AAKI,UAAA,QAAQ,EAAEN;AALd;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAjCJ,eA2CI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3CJ,eA8CI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA9CJ;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiEH;AAAA","sourcesContent":["import gql from \"graphql-tag\";\nimport useForm from \"../lib/useForm\";\nimport Form from './styles/Form';\n\nconst CREATE_PRODUCT_MUTATION = gql`\n    mutation CREATE_PRODUCT_MUTATION(\n        # which variables (and their types) are passed in?\n        $name: String!\n        $description: String!\n        $price: Int!\n        $image: Upload\n    ) {\n        createProduct (data:{\n            name: $name\n            price: $price\n            description: $description\n            status: \"available\"\n            photo: {\n                create: {\n                    image: $image\n                    alttext: $name\n                }\n            }\n        }){\n            id\n            description\n            price\n            name\n        }\n    }\n`;\n\nexport default function CreateProduct() {\n    const {inputs, handleChange, clearForm, resetForm} = useForm({\n        image: '',\n        name: '',\n        price: '',\n        description: '',\n    });\n    return (\n        <Form onSubmit={(e) => {\n            e.preventDefault();\n            console.log({inputs});\n            \n        }}>\n            <fieldset >\n                <label htmlFor=\"image\">\n                    Image\n                    <input\n                        required \n                        type=\"file\"\n                        id=\"image\"\n                        name=\"image\"\n                        onChange={handleChange}\n                    />\n                </label>\n                <label htmlFor=\"name\">\n                    Name It!\n                    <input\n                        type=\"text\"\n                        id=\"name\"\n                        name=\"name\"\n                        placeholder=\"Name\"\n                        value={inputs.name}\n                        onChange={handleChange}\n                    />\n                </label>\n                <label htmlFor=\"price\">\n                    Price It!\n                    <input\n                        type=\"number\"\n                        id=\"price\"\n                        name=\"price\"\n                        placeholder=\"Price\"\n                        value={inputs.price}\n                        onChange={handleChange}\n                    />\n                </label>\n                <label htmlFor=\"description\">\n                    Describe It!\n                    <textarea\n                        id=\"description\"\n                        name=\"description\"\n                        placeholder=\"Description\"\n                        value={inputs.description}\n                        onChange={handleChange}\n                    />\n                </label> \n                <label>\n                    Bop It!\n                </label>\n                <button type=\"submit\">+ Add Product</button>\n            </fieldset>\n\n            {/* //EXAMPLE methods */}\n            {/* <button type='button' onClick={clearForm}>\n                Clear Form\n            </button>\n            <button type='button' onClick={resetForm}>\n                Reset Form\n            </button> */}\n            \n        </Form>\n    )\n};\n"]},"metadata":{},"sourceType":"module"}