{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/components/UpdateProduct.js\";\nimport { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nconst SINGLE_ITEM_QUERY = gql`\n    query SINGLE_ITEM_QUERY($id: ID!) {\n        Product (where: {\n            id: $id\n        }) \n        {\n            id\n            name\n            price\n            description\n            photo {\n                id\n                altText\n                image {\n                    publicUrlTransformed\n                }\n            }\n        }\n    }\n`;\nexport default function UpdateProduct({\n  id\n}) {\n  //TODO\n  //get existing product\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(SINGLE_ITEM_QUERY); //mutation to update\n  //for to handle updates\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Update \", id]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 12\n  }, this);\n}","map":{"version":3,"sources":["/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/components/UpdateProduct.js"],"names":["useQuery","gql","SINGLE_ITEM_QUERY","UpdateProduct","id","data","error","loading"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,iBAAiB,GAAGD,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnBA;AAsBA,eAAe,SAASE,aAAT,CAAuB;AAACC,EAAAA;AAAD,CAAvB,EAA6B;AAExC;AACA;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BP,QAAQ,CAACE,iBAAD,CAAzC,CAJwC,CAKxC;AACA;;AAEA,sBAAO;AAAA,0BAAWE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH","sourcesContent":["import { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\n\nconst SINGLE_ITEM_QUERY = gql`\n    query SINGLE_ITEM_QUERY($id: ID!) {\n        Product (where: {\n            id: $id\n        }) \n        {\n            id\n            name\n            price\n            description\n            photo {\n                id\n                altText\n                image {\n                    publicUrlTransformed\n                }\n            }\n        }\n    }\n`;\n \n\nexport default function UpdateProduct({id}) {\n\n    //TODO\n    //get existing product\n    const { data, error, loading } = useQuery(SINGLE_ITEM_QUERY)\n    //mutation to update\n    //for to handle updates\n\n    return <p>Update {id}</p>;\n}"]},"metadata":{},"sourceType":"module"}