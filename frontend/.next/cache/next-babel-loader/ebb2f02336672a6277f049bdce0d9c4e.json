{"ast":null,"code":"import _slicedToArray from \"/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/components/SignIn.js\",\n    _s = $RefreshSig$();\n\nimport Form from './styles/Form';\nimport useForm from \"../lib/useForm\";\nimport { useQuery } from '@apollo/client';\nexport default function SignIn() {\n  _s();\n\n  var _useForm = useForm({\n    email: '',\n    password: ''\n  }),\n      inputs = _useForm.inputs,\n      handleChange = _useForm.handleChange,\n      clearForm = _useForm.clearForm,\n      resetForm = _useForm.resetForm;\n\n  var _useQuery = useQuery(CREATE_PRODUCT_MUTATION, {\n    variables: inputs,\n    refetchQueries: [{\n      query: ALL_PRODUCTS_QUERY\n    }]\n  }),\n      _useQuery2 = _slicedToArray(_useQuery, 2),\n      createProduct = _useQuery2[0],\n      _useQuery2$ = _useQuery2[1],\n      loading = _useQuery2$.loading,\n      error = _useQuery2$.error,\n      data = _useQuery2$.data;\n\n  function handleSubmit(e) {\n    e.preventDefault();\n  }\n\n  ;\n  return (\n    /*#__PURE__*/\n    //method POST to prevent password from showing in URL, history, and logs\n    _jsxDEV(Form, {\n      method: \"post\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(DisplayError, {\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Go Ahead And Sign On In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        disabled: loading,\n        \"aria-busy\": loading,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            placeholder: \"Please Enter Your Email\",\n            autoComplete: \"email\",\n            value: inputs.email,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            placeholder: \"..And Your Password\",\n            autoComplete: \"password\",\n            value: inputs.password,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(SignIn, \"fuX32abBiCiwW75+8X1GDLBJhxM=\", false, function () {\n  return [useForm, useQuery];\n});\n\n_c = SignIn;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/components/SignIn.js"],"names":["Form","useForm","useQuery","SignIn","email","password","inputs","handleChange","clearForm","resetForm","CREATE_PRODUCT_MUTATION","variables","refetchQueries","query","ALL_PRODUCTS_QUERY","createProduct","loading","error","data","handleSubmit","e","preventDefault"],"mappings":";;;;;;AAAA,OAAOA,IAAP,MAAiB,eAAjB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAGA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAAA,iBAE0BF,OAAO,CAAC;AAC3DG,IAAAA,KAAK,EAAE,EADoD;AAE3DC,IAAAA,QAAQ,EAAE;AAFiD,GAAD,CAFjC;AAAA,MAErBC,MAFqB,YAErBA,MAFqB;AAAA,MAEbC,YAFa,YAEbA,YAFa;AAAA,MAECC,SAFD,YAECA,SAFD;AAAA,MAEYC,SAFZ,YAEYA,SAFZ;;AAAA,kBAMqBP,QAAQ,CAACQ,uBAAD,EAA0B;AAChFC,IAAAA,SAAS,EAAEL,MADqE;AAEhFM,IAAAA,cAAc,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAEC;AAAT,KAAD;AAFgE,GAA1B,CAN7B;AAAA;AAAA,MAMtBC,aANsB;AAAA;AAAA,MAMLC,OANK,eAMLA,OANK;AAAA,MAMIC,KANJ,eAMIA,KANJ;AAAA,MAMWC,IANX,eAMWA,IANX;;AAW7B,WAASC,YAAT,CAAsBC,CAAtB,EAAwB;AACpBA,IAAAA,CAAC,CAACC,cAAF;AACH;;AAAA;AAED;AAAA;AACI;AACA,YAAC,IAAD;AAAM,MAAA,MAAM,EAAC,MAAb;AAAoB,MAAA,QAAQ,EAAEF,YAA9B;AAAA,8BACI,QAAC,YAAD;AAAc,QAAA,KAAK,EAAEF;AAArB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAU,QAAA,QAAQ,EAAED,OAApB;AAA6B,qBAAWA,OAAxC;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA,2CAEI;AACI,YAAA,QAAQ,MADZ;AAEI,YAAA,IAAI,EAAC,OAFT;AAGI,YAAA,EAAE,EAAC,OAHP;AAII,YAAA,IAAI,EAAC,OAJT;AAKI,YAAA,WAAW,EAAC,yBALhB;AAMI,YAAA,YAAY,EAAC,OANjB;AAOI,YAAA,KAAK,EAAEV,MAAM,CAACF,KAPlB;AAQI,YAAA,QAAQ,EAAEG;AARd;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAcI;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA,8CAEI;AACI,YAAA,IAAI,EAAC,UADT;AAEI,YAAA,EAAE,EAAC,UAFP;AAGI,YAAA,IAAI,EAAC,UAHT;AAII,YAAA,WAAW,EAAC,qBAJhB;AAKI,YAAA,YAAY,EAAC,UALjB;AAMI,YAAA,KAAK,EAAED,MAAM,CAACD,QANlB;AAOI,YAAA,QAAQ,EAAEE;AAPd;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdJ,eA0BI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AA6CH;;GA5DuBJ,M;UAEmCF,O,EAILC,Q;;;KAN9BC,M;AA4DvB","sourcesContent":["import Form from './styles/Form';\nimport useForm from \"../lib/useForm\";\nimport { useQuery } from '@apollo/client';\n\n\nexport default function SignIn() {\n\n    const { inputs, handleChange, clearForm, resetForm } = useForm({\n        email: '',\n        password: '',\n    });\n    const [createProduct, { loading, error, data }] = useQuery(CREATE_PRODUCT_MUTATION, {\n        variables: inputs,\n        refetchQueries: [{ query: ALL_PRODUCTS_QUERY }],\n    });\n\n    function handleSubmit(e){\n        e.preventDefault()\n    };\n\n    return (\n        //method POST to prevent password from showing in URL, history, and logs\n        <Form method=\"post\" onSubmit={handleSubmit}>\n            <DisplayError error={error} />\n            <h2>Go Ahead And Sign On In</h2>\n            <fieldset disabled={loading} aria-busy={loading}>\n                <label htmlFor=\"email\">\n                    Email\n                    <input\n                        required\n                        type=\"email\"\n                        id=\"email\"\n                        name=\"email\"\n                        placeholder=\"Please Enter Your Email\"\n                        autoComplete=\"email\"\n                        value={inputs.email}\n                        onChange={handleChange}\n                    />\n                </label>\n                <label htmlFor=\"password\">\n                    Password\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        name=\"password\"\n                        placeholder=\"..And Your Password\"\n                        autoComplete=\"password\"\n                        value={inputs.password}\n                        onChange={handleChange}\n                    />\n                </label>\n                <button type=\"submit\">Sign In</button>\n            </fieldset>\n\n            {/* //EXAMPLE methods */}\n            {/* <button type='button' onClick={clearForm}>\n                Clear Form\n            </button>\n            <button type='button' onClick={resetForm}>\n                Reset Form\n            </button> */}\n\n        </Form>\n    )\n    \n};"]},"metadata":{},"sourceType":"module"}