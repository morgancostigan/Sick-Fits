{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/components/SignUp.js\";\nimport Form from './styles/Form';\nimport useForm from \"../lib/useForm\";\nimport DisplayError from './ErrorMessage';\nimport { useMutation, useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { CURRENT_USER_QUERY } from './User';\nconst SIGN_UP_MUTATION = gql`\n    mutation SIGN_UP_MUTATION($email: String!, $password: String!) {\n        authenticateUserWithPassword(email: $email, password: $password){\n            ... on UserAuthenticationWithPasswordSuccess {\n                item {\n                    id\n                    name\n                    email\n                }\n            },\n            ... on UserAuthenticationWithPasswordFailure {\n                code\n                message\n            }\n        }\n    }\n`;\nexport default function SignUp() {\n  var _data$authenticateUse;\n\n  const {\n    inputs,\n    handleChange,\n    clearForm,\n    resetForm\n  } = useForm({\n    email: '',\n    name: '',\n    password: ''\n  });\n  const [signup, {\n    data,\n    loading\n  }] = useMutation(SIGN_UP_MUTATION, {\n    variables: inputs,\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }]\n  });\n\n  async function handleSubmit(e) {\n    e.preventDefault(); //stop form from submitting early\n    //send email and password to graphQL API\n    // await signin();\n    //const res for logging only\n\n    const res = await signup();\n    console.log({\n      res\n    });\n    resetForm();\n  }\n\n  ; //error is weird here.  if there is error data that matches the typename, then display it...  else, undefined\n\n  const error = (data === null || data === void 0 ? void 0 : (_data$authenticateUse = data.authenticateUserWithPassword) === null || _data$authenticateUse === void 0 ? void 0 : _data$authenticateUse.__typename) === \"UserAuthenticationWithPasswordFailure\" ? data === null || data === void 0 ? void 0 : data.authenticateUserWithPassword : undefined;\n  return (\n    /*#__PURE__*/\n    //method POST to prevent password from showing in URL, history, and logs\n    _jsxDEV(Form, {\n      method: \"post\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Get Signed Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DisplayError, {\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        disabled: loading,\n        \"aria-busy\": loading,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            placeholder: \"What Email Address Are You Using?\",\n            autoComplete: \"email\",\n            value: inputs.email,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            type: \"name\",\n            id: \"email\",\n            name: \"email\",\n            placeholder: \"What Email Address Are You Using?\",\n            autoComplete: \"email\",\n            value: inputs.email,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            placeholder: \"...And We Will Know You By The Password You Enter\",\n            autoComplete: \"password\",\n            value: inputs.password,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)\n  );\n}\n;","map":{"version":3,"sources":["/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/components/SignUp.js"],"names":["Form","useForm","DisplayError","useMutation","useQuery","gql","CURRENT_USER_QUERY","SIGN_UP_MUTATION","SignUp","inputs","handleChange","clearForm","resetForm","email","name","password","signup","data","loading","variables","refetchQueries","query","handleSubmit","e","preventDefault","res","console","log","error","authenticateUserWithPassword","__typename","undefined"],"mappings":"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","sourcesContent":["import Form from './styles/Form';\nimport useForm from \"../lib/useForm\";\nimport DisplayError from './ErrorMessage';\nimport { useMutation, useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { CURRENT_USER_QUERY } from './User';\n\nconst SIGN_UP_MUTATION = gql`\n    mutation SIGN_UP_MUTATION($email: String!, $password: String!) {\n        authenticateUserWithPassword(email: $email, password: $password){\n            ... on UserAuthenticationWithPasswordSuccess {\n                item {\n                    id\n                    name\n                    email\n                }\n            },\n            ... on UserAuthenticationWithPasswordFailure {\n                code\n                message\n            }\n        }\n    }\n`;\n\nexport default function SignUp() {\n\n    const { inputs, handleChange, clearForm, resetForm } = useForm({\n        email: '',\n        name: '',\n        password: '',\n    });\n    const [signup, { data, loading }] = useMutation(SIGN_UP_MUTATION, {\n        variables: inputs,\n        refetchQueries: [{ query: CURRENT_USER_QUERY }]\n    });\n\n    async function handleSubmit(e) {\n        e.preventDefault(); //stop form from submitting early\n        //send email and password to graphQL API\n        // await signin();\n        //const res for logging only\n        const res = await signup()\n        console.log({ res });\n        resetForm();\n    };\n    //error is weird here.  if there is error data that matches the typename, then display it...  else, undefined\n    const error = data?.authenticateUserWithPassword?.__typename === \"UserAuthenticationWithPasswordFailure\" ? data?.authenticateUserWithPassword : undefined;\n\n    return (\n        //method POST to prevent password from showing in URL, history, and logs\n        <Form method=\"post\" onSubmit={handleSubmit}>\n            {/* <DisplayError error={error} /> */}\n            <h2>Get Signed Up</h2>\n            <DisplayError error={error} />\n\n            <fieldset disabled={loading} aria-busy={loading}>\n                {/* <fieldset> */}\n\n                <label htmlFor=\"email\">\n                    Email\n                    <input\n                        required\n                        type=\"email\"\n                        id=\"email\"\n                        name=\"email\"\n                        placeholder=\"What Email Address Are You Using?\"\n                        autoComplete=\"email\"\n                        value={inputs.email}\n                        onChange={handleChange}\n                    />\n                </label>\n                <label htmlFor=\"name\">\n                    Name\n                    <input\n                        required\n                        type=\"name\"\n                        id=\"email\"\n                        name=\"email\"\n                        placeholder=\"What Email Address Are You Using?\"\n                        autoComplete=\"email\"\n                        value={inputs.email}\n                        onChange={handleChange}\n                    />\n                </label>\n                <label htmlFor=\"password\">\n                    Password\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        name=\"password\"\n                        placeholder=\"...And We Will Know You By The Password You Enter\"\n                        autoComplete=\"password\"\n                        value={inputs.password}\n                        onChange={handleChange}\n                    />\n                </label>\n                <button type=\"submit\">Sign In</button>\n            </fieldset>\n\n            {/* //EXAMPLE methods */}\n            {/* <button type='button' onClick={clearForm}>\n                Clear Form\n            </button>\n            <button type='button' onClick={resetForm}>\n                Reset Form\n            </button> */}\n\n        </Form>\n    )\n\n};"]},"metadata":{},"sourceType":"module"}