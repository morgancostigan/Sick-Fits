{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/components/UpdateProduct.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query SINGLE_ITEM_QUERY($id: ID!) {\\n        Product (where: {\\n            id: $id\\n        }) \\n        {\\n            id\\n            name\\n            price\\n            description\\n            photo {\\n                id\\n                altText\\n                image {\\n                    publicUrlTransformed\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nvar SINGLE_ITEM_QUERY = gql(_templateObject());\nexport default function UpdateProduct(_ref) {\n  _s();\n\n  var id = _ref.id;\n\n  //TODO\n  //get existing product\n  var _useQuery = useQuery(),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading; //mutation to update\n  //for to handle updates\n\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Update \", id]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 12\n  }, this);\n}\n\n_s(UpdateProduct, \"eE+cqeCo2lkI//dPlCsO1rICVGU=\", false, function () {\n  return [useQuery];\n});\n\n_c = UpdateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"sources":["/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/components/UpdateProduct.js"],"names":["useQuery","gql","SINGLE_ITEM_QUERY","UpdateProduct","id","data","error","loading"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,IAAMC,iBAAiB,GAAGD,GAAH,mBAAvB;AAsBA,eAAe,SAASE,aAAT,OAA6B;AAAA;;AAAA,MAALC,EAAK,QAALA,EAAK;;AAExC;AACA;AAHwC,kBAIPJ,QAAQ,EAJD;AAAA,MAIhCK,IAJgC,aAIhCA,IAJgC;AAAA,MAI1BC,KAJ0B,aAI1BA,KAJ0B;AAAA,MAInBC,OAJmB,aAInBA,OAJmB,EAKxC;AACA;;;AAEA,sBAAO;AAAA,0BAAWH,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;GATuBD,a;UAIaH,Q;;;KAJbG,a","sourcesContent":["import { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\n\nconst SINGLE_ITEM_QUERY = gql`\n    query SINGLE_ITEM_QUERY($id: ID!) {\n        Product (where: {\n            id: $id\n        }) \n        {\n            id\n            name\n            price\n            description\n            photo {\n                id\n                altText\n                image {\n                    publicUrlTransformed\n                }\n            }\n        }\n    }\n`;\n \n\nexport default function UpdateProduct({id}) {\n\n    //TODO\n    //get existing product\n    const { data, error, loading } = useQuery()\n    //mutation to update\n    //for to handle updates\n\n    return <p>Update {id}</p>;\n}"]},"metadata":{},"sourceType":"module"}