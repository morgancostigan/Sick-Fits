{"ast":null,"code":"import _defineProperty from \"/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from \"react\";\nexport default function useForm() {\n  _s();\n\n  var initial = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  //create a state object for our inputs\n  var _useState = useState(initial),\n      inputs = _useState[0],\n      setInputs = _useState[1];\n\n  var _handleChange = function handleChange(e) {\n    setInputs(_objectSpread(_objectSpread({}, inputs), {}, _defineProperty({}, e.target.name, e.target.value)));\n  },\n      value = _handleChange.value,\n      name = _handleChange.name,\n      type = _handleChange.type; //return the things we want surfaced \n\n\n  return {\n    inputs: inputs,\n    handleChange: handleChange\n  };\n}\n\n_s(useForm, \"0tjT+aoDVbAe0wsQZsq9AKLCE20=\");\n\n;","map":{"version":3,"sources":["/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/lib/useForm.js"],"names":["useState","useForm","initial","inputs","setInputs","handleChange","e","target","name","value","type"],"mappings":";;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,OAAT,GAA+B;AAAA;;AAAA,MAAdC,OAAc,uEAAJ,EAAI;;AAC1C;AAD0C,kBAEdF,QAAQ,CAACE,OAAD,CAFM;AAAA,MAEnCC,MAFmC;AAAA,MAE3BC,SAF2B;;AAAA,sBAK1C,SAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACrBF,IAAAA,SAAS,iCAEFD,MAFE,2BAGJG,CAAC,CAACC,MAAF,CAASC,IAHL,EAGYF,CAAC,CAACC,MAAF,CAASE,KAHrB,GAAT;AAKH,GAXyC;AAAA,MAGlCA,KAHkC,iBAGlCA,KAHkC;AAAA,MAG3BD,IAH2B,iBAG3BA,IAH2B;AAAA,MAGrBE,IAHqB,iBAGrBA,IAHqB,EAa1C;;;AACA,SAAO;AACHP,IAAAA,MAAM,EAANA,MADG;AAEHE,IAAAA,YAAY,EAAZA;AAFG,GAAP;AAKH;;GAnBuBJ,O;;AAmBvB","sourcesContent":["import { useState } from \"react\";\n\nexport default function useForm(initial = {}) {\n    //create a state object for our inputs\n    const [inputs, setInputs] = useState(initial);\n    const { value, name, type } = \n\n    function handleChange(e) {\n        setInputs({\n            //copy existing state\n            ...inputs,\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    //return the things we want surfaced \n    return {\n        inputs,\n        handleChange,\n    };\n\n};\n"]},"metadata":{},"sourceType":"module"}