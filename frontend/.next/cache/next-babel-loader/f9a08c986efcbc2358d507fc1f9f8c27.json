{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/lib/cartState.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from 'react';\nvar LocalStateContext = /*#__PURE__*/createContext();\nvar LocalStateProvider = LocalStateContext.Provider;\nexport default function CartStateProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  //This is a custom Provider\n  //we store data (state) and functionality (updaters)\n  //accessible anywhere in the app via consumer\n  //default to closed cart\n  var _useState = useState(true),\n      cartOpen = _useState[0],\n      setCartOpen = _useState[1];\n\n  function toggleCart() {\n    //toggle to opposite value\n    setCartOpen(!cartOpen);\n  }\n\n  ;\n\n  function closeCart() {\n    setCartOpen(false);\n  }\n\n  ;\n\n  function openCart() {\n    setCartOpen(true);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(LocalStateProvider, {\n    value: {\n      cartOpen: cartOpen,\n      setCartOpen: setCartOpen,\n      toggleCart: toggleCart,\n      openCart: openCart,\n      closeCart: closeCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CartStateProvider, \"4Qu9cPyVTv4vrTzPHQmc7wacYDc=\");\n\n_c = CartStateProvider;\n; // make a custom hook to access Cart local state\n\nfunction useCart() {\n  _s2();\n\n  //useContext is the Consumer that can access Provider info\n  var all = useContext(LocalStateContext);\n  return all;\n}\n\n_s2(useCart, \"k0r6hllA0ZVFTbsvyQUS1AVLOSY=\");\n\nexport { CartStateProvider, useCart };\n\nvar _c;\n\n$RefreshReg$(_c, \"CartStateProvider\");","map":{"version":3,"sources":["/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/lib/cartState.js"],"names":["createContext","useContext","useState","LocalStateContext","LocalStateProvider","Provider","CartStateProvider","children","cartOpen","setCartOpen","toggleCart","closeCart","openCart","useCart","all"],"mappings":";;;;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;AAEA,IAAMC,iBAAiB,gBAAGH,aAAa,EAAvC;AACA,IAAMI,kBAAkB,GAAGD,iBAAiB,CAACE,QAA7C;AAGA,eAAe,SAASC,iBAAT,OAAyC;AAAA;;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AACpD;AACA;AACA;AAEA;AALoD,kBAMpBL,QAAQ,CAAC,IAAD,CANY;AAAA,MAM7CM,QAN6C;AAAA,MAMnCC,WANmC;;AAQpD,WAASC,UAAT,GAAsB;AAClB;AACAD,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACH;;AAAA;;AAED,WAASG,SAAT,GAAqB;AACjBF,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH;;AAAA;;AAED,WAASG,QAAT,GAAoB;AAChBH,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH;;AAAA;AAED,sBACI,QAAC,kBAAD;AACI,IAAA,KAAK,EAAE;AACHD,MAAAA,QAAQ,EAARA,QADG;AAEHC,MAAAA,WAAW,EAAXA,WAFG;AAGHC,MAAAA,UAAU,EAAVA,UAHG;AAIHE,MAAAA,QAAQ,EAARA,QAJG;AAKHD,MAAAA,SAAS,EAATA;AALG,KADX;AAAA,cASKJ;AATL;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GAlCuBD,iB;;KAAAA,iB;AAkCvB,C,CAED;;AAEA,SAASO,OAAT,GAAmB;AAAA;;AACf;AACA,MAAMC,GAAG,GAAGb,UAAU,CAACE,iBAAD,CAAtB;AACA,SAAOW,GAAP;AACH;;IAJQD,O;;AAMT,SAASP,iBAAT,EAA4BO,OAA5B","sourcesContent":["import { createContext, useContext, useState } from 'react';\n\nconst LocalStateContext = createContext();\nconst LocalStateProvider = LocalStateContext.Provider;\n\n\nexport default function CartStateProvider({ children }) {\n    //This is a custom Provider\n    //we store data (state) and functionality (updaters)\n    //accessible anywhere in the app via consumer\n\n    //default to closed cart\n    const [cartOpen, setCartOpen] = useState(true);\n\n    function toggleCart() {\n        //toggle to opposite value\n        setCartOpen(!cartOpen);\n    };\n\n    function closeCart() {\n        setCartOpen(false);\n    };\n\n    function openCart() {\n        setCartOpen(true);\n    };\n\n    return (\n        <LocalStateProvider \n            value={{ \n                cartOpen, \n                setCartOpen,\n                toggleCart,\n                openCart,\n                closeCart,\n            }}\n        >\n            {children}\n        </LocalStateProvider>\n    );\n};\n\n// make a custom hook to access Cart local state\n\nfunction useCart() {\n    //useContext is the Consumer that can access Provider info\n    const all = useContext(LocalStateContext);\n    return all;\n}\n\nexport { CartStateProvider, useCart };"]},"metadata":{},"sourceType":"module"}