{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/components/Products.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    display: grid;\\n    grid-template-columns: 1fr 1fr;\\n    grid-gap: 60px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query ALL_PRODUCTS_QUERY {\\n        allProducts {\\n            id\\n            name\\n            price\\n            description\\n            photo {\\n                id\\n                image {\\n                    publicUrlTransformed\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport Product from '../components/P';\nvar ALL_PRODUCTS_QUERY = gql(_templateObject());\nvar ProductListStyles = styled.div(_templateObject2());\n_c = ProductListStyles;\nexport default function Products() {\n  _s();\n\n  var _this = this;\n\n  var _useQuery = useQuery(ALL_PRODUCTS_QUERY),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  console.log({\n    data: data\n  }, {\n    error: error\n  }, {\n    loading: loading\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Wait for it... wait for it...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ProductListStyles, {\n      children: data.allProducts.map(function (product) {\n        return /*#__PURE__*/_jsxDEV(Product, {}, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Products, \"Z+0LgrSWpTZsLds+tjQq9+67f1U=\", false, function () {\n  return [useQuery];\n});\n\n_c2 = Products;\n;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProductListStyles\");\n$RefreshReg$(_c2, \"Products\");","map":{"version":3,"sources":["/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/components/Products.js"],"names":["useQuery","gql","styled","Product","ALL_PRODUCTS_QUERY","ProductListStyles","div","Products","data","error","loading","console","log","message","allProducts","map","product","id"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AAEA,IAAMC,kBAAkB,GAAGH,GAAH,mBAAxB;AAiBA,IAAMI,iBAAiB,GAAGH,MAAM,CAACI,GAAV,oBAAvB;KAAMD,iB;AAMN,eAAe,SAASE,QAAT,GAAoB;AAAA;;AAAA;;AAAA,kBACAP,QAAQ,CAACI,kBAAD,CADR;AAAA,MACxBI,IADwB,aACxBA,IADwB;AAAA,MAClBC,KADkB,aAClBA,KADkB;AAAA,MACXC,OADW,aACXA,OADW;;AAE/BC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACJ,IAAAA,IAAI,EAAJA;AAAD,GAAZ,EAAoB;AAACC,IAAAA,KAAK,EAALA;AAAD,GAApB,EAA6B;AAACC,IAAAA,OAAO,EAAPA;AAAD,GAA7B;AACA,MAAIA,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAK,CAACI,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,sBACI;AAAA,2BACI,QAAC,iBAAD;AAAA,gBACKL,IAAI,CAACM,WAAL,CAAiBC,GAAjB,CAAqB,UAACC,OAAD;AAAA,4BAClB,QAAC,OAAD,MAAcA,OAAO,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA,iBADkB;AAAA,OAArB;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAduBV,Q;UACWP,Q;;;MADXO,Q;AAcvB","sourcesContent":["import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport Product from '../components/P'\n\nconst ALL_PRODUCTS_QUERY = gql`\n    query ALL_PRODUCTS_QUERY {\n        allProducts {\n            id\n            name\n            price\n            description\n            photo {\n                id\n                image {\n                    publicUrlTransformed\n                }\n            }\n        }\n    }\n`;\n\nconst ProductListStyles = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 60px;\n`;\n\nexport default function Products() {\n    const {data, error, loading} = useQuery(ALL_PRODUCTS_QUERY);\n    console.log({data}, {error}, {loading});\n    if (loading) return <p>Wait for it... wait for it...</p>;\n    if (error) return <p>Error: {error.message}</p>;\n    return (\n        <div>\n            <ProductListStyles>\n                {data.allProducts.map((product) => (\n                    <Product key={product.id}/>\n                ))}\n            </ProductListStyles>\n        </div>\n    )\n}; "]},"metadata":{},"sourceType":"module"}