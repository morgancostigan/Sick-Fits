{"ast":null,"code":"export default function paginationField() {\n  return {\n    keyArgs: false,\n    //tells Apollo we will deal with this\n    read: function read() {//Apollo asks read function for allProducts\n      //we can do 1 of 2 things...\n      // 1. return the items that are already in cache\n      // or 2. return 'false' triggering a network request for the items\n\n      var existing = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    },\n    merge: function merge() {// this runs when Apollo brings data back from the network request\n    }\n  };\n}\n;","map":{"version":3,"sources":["/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/lib/paginationField.js"],"names":["paginationField","keyArgs","read","existing","merge"],"mappings":"AAAA,eAAe,SAASA,eAAT,GAA2B;AACtC,SAAO;AACHC,IAAAA,OAAO,EAAE,KADN;AACa;AAChBC,IAAAA,IAFG,kBAEkB,CACjB;AAEA;AACA;AACA;;AALiB,UAAhBC,QAAgB,uEAAN,EAAM;AAMpB,KARE;AASHC,IAAAA,KATG,mBASK,CACJ;AAEH;AAZE,GAAP;AAcH;AAAA","sourcesContent":["export default function paginationField() {\n    return {\n        keyArgs: false, //tells Apollo we will deal with this\n        read(existing =[], ) {\n            //Apollo asks read function for allProducts\n\n            //we can do 1 of 2 things...\n            // 1. return the items that are already in cache\n            // or 2. return 'false' triggering a network request for the items\n        },\n        merge() {\n            // this runs when Apollo brings data back from the network request\n\n        }\n    };\n};"]},"metadata":{},"sourceType":"module"}