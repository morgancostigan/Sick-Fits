{"ast":null,"code":"import _slicedToArray from \"/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/components/DeleteProduct.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation DELETE_PRODUCT_MUTATION($id: ID!) {\\n        deleteProduct($id) {\\n            id\\n            name\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from \"graphql-tag\";\nvar DELETE_PRODUCT_MUTATION = gql(_templateObject());\nexport default function DeleteProduct(_ref) {\n  var id = _ref.id,\n      children = _ref.children;\n\n  var _useMut = useMut,\n      _useMut2 = _slicedToArray(_useMut, 2),\n      deleteProduct = _useMut2[0],\n      loading = _useMut2[1].loading;\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    onClick: function onClick() {\n      if (confirm('Should we really remove this item from existence?')) {\n        //if confirmed, THEN delete\n        console.log('gettin it gone!');\n      }\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 12\n  }, this);\n}\n_c = DeleteProduct;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteProduct\");","map":{"version":3,"sources":["/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/components/DeleteProduct.js"],"names":["gql","DELETE_PRODUCT_MUTATION","DeleteProduct","id","children","useMut","deleteProduct","loading","confirm","console","log"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,IAAMC,uBAAuB,GAAGD,GAAH,mBAA7B;AASA,eAAe,SAASE,aAAT,OAAuC;AAAA,MAAfC,EAAe,QAAfA,EAAe;AAAA,MAAXC,QAAW,QAAXA,QAAW;;AAAA,gBACfC,MADe;AAAA;AAAA,MAC3CC,aAD2C;AAAA,MAC3BC,OAD2B,eAC3BA,OAD2B;;AAElD,sBAAO;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE,mBAAM;AACxC,UAAGC,OAAO,CAAC,mDAAD,CAAV,EAAiE;AAC7D;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AAEH;AACJ,KANM;AAAA,cAOFN;AAPE;AAAA;AAAA;AAAA;AAAA,UAAP;AASH;KAXuBF,a;AAWvB","sourcesContent":["import gql from \"graphql-tag\";\n\nconst DELETE_PRODUCT_MUTATION = gql`\n    mutation DELETE_PRODUCT_MUTATION($id: ID!) {\n        deleteProduct($id) {\n            id\n            name\n        }\n    }\n`;\n\nexport default function DeleteProduct({id, children}) {\n    const [deleteProduct, {loading}] = useMut\n    return <button type=\"button\" onClick={() => {\n        if(confirm('Should we really remove this item from existence?')) {\n            //if confirmed, THEN delete\n            console.log('gettin it gone!');\n            \n        }\n    }}>\n        {children}\n    </button>\n};"]},"metadata":{},"sourceType":"module"}