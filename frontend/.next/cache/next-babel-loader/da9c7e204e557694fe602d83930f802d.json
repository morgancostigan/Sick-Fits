{"ast":null,"code":"import _regeneratorRuntime from \"/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/components/Reset.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation RESET_MUTATION(\\n            $email: String!, \\n            $token: String!, \\n            $password: String!\\n    ){\\n        redeemUserPasswordResetToken(\\n            email: $email,\\n            password: $password,\\n            token: $token\\n        ){\\n            code\\n            message\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Form from './styles/Form';\nimport useForm from \"../lib/useForm\";\nimport DisplayError from './ErrorMessage';\nimport { useMutation, useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport { CURRENT_USER_QUERY } from './User';\nvar RESET_MUTATION = gql(_templateObject());\nexport default function ResetPassword() {\n  _s();\n\n  var _data$redeemUserPassw;\n\n  var _useForm = useForm({\n    email: '',\n    password: '',\n    token: ''\n  }),\n      inputs = _useForm.inputs,\n      handleChange = _useForm.handleChange,\n      clearForm = _useForm.clearForm,\n      resetForm = _useForm.resetForm;\n\n  var _useMutation = useMutation(RESET_MUTATION, {\n    variables: inputs\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      resetPassword = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      data = _useMutation2$.data,\n      loading = _useMutation2$.loading; //if rreturned data includes a code, that IS the error, else no error\n\n\n  var error = (data === null || data === void 0 ? void 0 : (_data$redeemUserPassw = data.redeemUserPasswordResetToken) === null || _data$redeemUserPassw === void 0 ? void 0 : _data$redeemUserPassw.code) ? data.redeemUserPasswordResetToken : undefined;\n  console.log({\n    error: error\n  });\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault(); //stop form from submitting early\n              //send email and password to graphQL API\n              // await signin();\n              //const res for logging only\n              //catch prevents popup dialog in favor of console\n\n              _context.next = 3;\n              return resetPassword()[\"catch\"](console.error);\n\n            case 3:\n              res = _context.sent;\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  ;\n  return (\n    /*#__PURE__*/\n    //method POST to prevent password from showing in URL, history, and logs\n    _jsxDEV(Form, {\n      method: \"post\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Choose New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DisplayError, {\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        disabled: loading,\n        \"aria-busy\": loading,\n        children: [(data === null || data === void 0 ? void 0 : data.redeemUserPasswordResetToken) === null && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Password Successfully Reset, Please Sign In.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            placeholder: \"What Email Address Are You Using?\",\n            autoComplete: \"email\",\n            value: inputs.email,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: [\"New Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            placeholder: \"Please Enter a New Password\",\n            autoComplete: \"password\",\n            value: inputs.password,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(ResetPassword, \"yDXBWji9Rj5jkw6Z7sHWu7OVVvA=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c = ResetPassword;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["/Users/macbookpro/Documents/Tier-4/Advanced-React-master redux/sick-fits/frontend/components/Reset.js"],"names":["Form","useForm","DisplayError","useMutation","useQuery","gql","Router","CURRENT_USER_QUERY","RESET_MUTATION","ResetPassword","email","password","token","inputs","handleChange","clearForm","resetForm","variables","resetPassword","data","loading","error","redeemUserPasswordResetToken","code","undefined","console","log","handleSubmit","e","preventDefault","res"],"mappings":"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","sourcesContent":["import Form from './styles/Form';\nimport useForm from \"../lib/useForm\";\nimport DisplayError from './ErrorMessage';\nimport { useMutation, useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport { CURRENT_USER_QUERY } from './User';\n\nconst RESET_MUTATION = gql`\n    mutation RESET_MUTATION(\n            $email: String!, \n            $token: String!, \n            $password: String!\n    ){\n        redeemUserPasswordResetToken(\n            email: $email,\n            password: $password,\n            token: $token\n        ){\n            code\n            message\n        }\n    }\n`;\n\nexport default function ResetPassword() {\n\n    const { inputs, handleChange, clearForm, resetForm } = useForm({\n        email: '',\n        password: '',\n        token: '',\n    });\n    const [resetPassword, { data, loading }] = useMutation(RESET_MUTATION, {\n        variables: inputs,\n    });\n\n    //if rreturned data includes a code, that IS the error, else no error\n    const error = data?.redeemUserPasswordResetToken?.code \n    ? data.redeemUserPasswordResetToken \n    : undefined;\n    console.log({error});\n    \n\n    async function handleSubmit(e) {\n        e.preventDefault(); //stop form from submitting early\n        //send email and password to graphQL API\n        // await signin();\n        //const res for logging only\n        //catch prevents popup dialog in favor of console\n        const res = await resetPassword().catch(console.error);\n        // console.log({ res });\n        // console.log({ data, error, loading })\n\n        // resetForm();\n    };\n\n    return (\n        //method POST to prevent password from showing in URL, history, and logs\n        <Form method=\"post\" onSubmit={handleSubmit}>\n            {/* <DisplayError error={error} /> */}\n            <h2>Choose New Password</h2>\n            <DisplayError error={error} />\n\n            <fieldset disabled={loading} aria-busy={loading}>\n                {\n                    data?.redeemUserPasswordResetToken === null && (\n                        <p>Password Successfully Reset, Please Sign In.</p>\n                    )\n                }\n                {/* <fieldset> */}\n\n                <label htmlFor=\"email\">\n                    Email\n                    <input\n                        required\n                        type=\"email\"\n                        id=\"email\"\n                        name=\"email\"\n                        placeholder=\"What Email Address Are You Using?\"\n                        autoComplete=\"email\"\n                        value={inputs.email}\n                        onChange={handleChange}\n                    />\n                </label>\n                <label htmlFor=\"password\">\n                    New Password\n                    <input\n                        required\n                        type=\"password\"\n                        id=\"password\"\n                        name=\"password\"\n                        placeholder=\"Please Enter a New Password\"\n                        autoComplete=\"password\"\n                        value={inputs.password}\n                        onChange={handleChange}\n                    />\n                </label>\n                <button type=\"submit\">Submit</button>\n            </fieldset>\n\n            {/* //EXAMPLE methods */}\n            {/* <button type='button' onClick={clearForm}>\n                Clear Form\n            </button>\n            <button type='button' onClick={resetForm}>\n                Reset Form\n            </button> */}\n\n        </Form>\n    )\n\n};"]},"metadata":{},"sourceType":"module"}